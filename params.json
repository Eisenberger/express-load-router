{
  "name": "Express-load-router",
  "tagline": "Automatic create routers from specified folder",
  "body": "# express-load-router\r\n\r\nLoad routers from specific folders for Express.js\r\n\r\n[![NPM version][npm-image]][npm-url]\r\n[![npm download][download-image]][download-url]\r\n[![David deps][david-image]][david-url]\r\n\r\n[npm-image]: https://img.shields.io/npm/v/express-load-router.svg\r\n[npm-url]: https://npmjs.com/package/express-load-router\r\n[download-image]: https://img.shields.io/npm/dm/express-load-router.svg\r\n[download-url]: https://npmjs.com/package/express-load-router\r\n[david-image]: https://img.shields.io/david/SFantasy/express-load-router.svg\r\n[david-url]: https://david-dm.org/SFantasy/express-load-router\r\n\r\n## Install\r\n\r\n```\r\nnpm i express-load-router -S\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nconst path = require('path');\r\nconst express = require('express');\r\nconst loadRouter = require('express-load-router');\r\n\r\nconst app = express();\r\n\r\n// Use `path.join(__dirname, 'path/to/folder')` here\r\nloadRouter(app, path.join(__dirname, 'controllers'));\r\n```\r\n\r\n### Options\r\n\r\n```js\r\nloadRouter(app, path.join(__dirname, 'controllers'), options);\r\n```\r\n\r\n     option    |  type | default \r\n---------------|-------|---------\r\n`excludeRules` | Array | `[]`\r\n`rewriteRules` | Map   | `new Map()`\r\n\r\n### `Controller` declaration\r\n\r\nThere are three kinds of `Controller` for this package:\r\n\r\n- Plain function\r\n\r\n```js\r\nexports.api = (req, res) => {\r\n  res.send('API');\r\n};\r\n```\r\n\r\n- Object\r\n\r\nProperty |  Type  | Required | Default | Note\r\n---------|--------|----------|---------|-------\r\nmethod   | String |    No    |  `GET`  | one of ['GET', 'POST', 'PUT', 'DELETE']\r\nparams   | Array  |    No    |  `[]`   |\r\nmiddlewares | Array | No     |  `[]`   | Array of middlewares, see below\r\nhandler  | Function | Yes    |   --    | \r\n\r\ne.g.\r\n\r\n```js\r\nexports.api = {\r\n  method: 'GET',\r\n  params: [':id'],\r\n  handler(req, res) {\r\n    res.send('API');\r\n  }\r\n};\r\n```\r\n\r\n### Middlewares support \r\n\r\nThis package also support `middlewares` in `controller`.\r\n\r\ne.g.\r\n\r\n```js\r\nexports.api = {\r\n  method: 'GET',\r\n  params: [':id'],\r\n  middlewares: [\r\n    function (req, res, next) {\r\n      console.log('Middleware 1');\r\n      next();\r\n    },\r\n    function (req, res, next) {\r\n      console.log('Middleware 2');\r\n      next();\r\n    },\r\n  ],\r\n  handler(req, res) {\r\n    return res.send(`product detail ${req.params.id}`);\r\n  },\r\n};\r\n```\r\n\r\n## Example\r\n\r\nSee [example](example/).\r\n\r\n## License\r\n\r\nThe MIT License\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}